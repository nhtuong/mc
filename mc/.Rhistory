samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=100)
data=list(x=dat.TASC.filtered,y=label.TASC, geneid=as.character(1:nrow(dat.TASC.filtered)),genenames=rownames(dat.TASC.filtered), logged2=FALSE)
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=100)
samr
?samr
data=list(x=x,y=y, geneid=as.character(1:nrow(x)),
genenames=paste("g",as.character(1:nrow(x)),sep=""), logged2=TRUE)
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=100)
data$logged2
data=list(x=dat.TASC.filtered,y=label.TASC, geneid=as.character(1:nrow(dat.TASC.filtered)),genenames=rownames(dat.TASC.filtered), logged2=FALSE)
data$logged2
rownames(dat.TASC.filtered)
as.character(1:nrow(dat.TASC.filtered))
data=list(x=log2(dat.TASC.filtered),y=label.TASC, geneid=as.character(1:nrow(dat.TASC.filtered)),genenames=rownames(dat.TASC.filtered), logged2=TRUE)
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=100)
label.TASC
cl<-label.TASC
cl[cl==0]<-2
cl
data=list(x=log2(dat.TASC.filtered),y=cl, geneid=as.character(1:nrow(dat.TASC.filtered)),genenames=rownames(dat.TASC.filtered), logged2=TRUE)
samr.obj<-samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=100)
delta=.4
samr.plot(samr.obj,delta)
samr.obj
names(samr.obj)
samr.obj$foldchange.star
attribute(samr.obj)
names(samr.obj)
samr.obj$numer
?samr
?samr
head(samr.obj)
samr.obj
samr.compute.delta.table(samr.obj)
samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
delta.table <- samr.compute.delta.table(samr.obj)
siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
siggenes.table
rs.liver
head(rs.liver)
names(siggenes.table)
siggenes.table
siggenes.table$genes.up
rbind(siggenes.table$genes.up,siggenes.table$genes.lo)
rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,1]
rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]
?samr.compute.siggenes.table
?samr
?samr.compute.siggenes.table
samr.compute.siggenes.table
siggenes.table
delta.table
samr.obj
?samr
samr.obj$eva
samr.obj$perms
samr.obj
samr.obj$pi0
samr.obj$foldchange
pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)
pv
siggenes.table
rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,1]
rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]
pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]]
siggenes.table
samt<-function(x,y){
data=list(x=log2(x),y=cl, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=100)
delta.table <- samr.compute.delta.table(samr.obj)
siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)
return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],
Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],
RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],
FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7])
}
samt<-function(x,y){
data=list(x=log2(x),y=cl, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=100)
delta.table <- samr.compute.delta.table(samr.obj)
siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)
return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],
Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],
RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],
FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7]))
}
rs.liver<-samt(log2(dat.liver.filtered), labels=label.liver)
rs.liver<-samt(log2(dat.liver.filtered), label.liver)
rs.liver<-samt(dat.liver.filtered, label.liver)
samt<-function(x,y){
data=list(x=log2(x),y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=100)
delta.table <- samr.compute.delta.table(samr.obj)
siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)
return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],
Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],
RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],
FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7]))
}
rs.liver<-samt(dat.liver.filtered, label.liver)
label.liver.t<-label.liver
label.TAM.t<-label.TAM
label.TAO.t<-label.TAO
label.TASC.t<-label.TASC
label.liver.t[label.liver.t==0]<-2
label.TAM.t[label.TAM.t==0]<-2
label.TAO.t[label.TAO.t==0]<-2
label.TASC.t[label.TASC.t==0]<-2
rs.liver<-samt(dat.liver.filtered, label.liver.t)
sig.liver<-rs.liver[rs.liver$Significant=="TRUE",]
desc.sig.liver<-dat.liver.src[dat.liver.src[,1]%in%sig.liver[,1],c("SYMBOL","DEFINITION")]
Tissu.liver<-rep("liver",nrow(sig.liver))
updown.liver<-cbind(rowMeans(dat.liver.filtered[rownames(dat.liver.filtered)%in%sig.liver[,1],label.liver==1]),rowMeans(dat.liver.filtered[rownames(dat.liver.filtered)%in%sig.liver[,1],label.liver==0]))
res.liver<-data.frame(sig.liver$probeID,desc.sig.liver$SYMBOL,Tissu.liver,ifelse(updown.liver[,1]>updown.liver[,2],1,0),sig.liver$Stat,sig.liver$RawpValue,sig.liver$FoldChange,desc.sig.liver$DEFINITION)
colnames(res.liver)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "qValue",   "FoldChange",  "DEFINITION")
res.liver
rs.TAM<-runSAM(dat.TAM.filtered, label.TAM.t)
rs.TAM<-samt(dat.TAM.filtered, label.TAM.t)
desc.sig.TAO<-dat.TAO.src[dat.TAO.src[,1]%in%sig.TAO[,1],c("SYMBOL","DEFINITION")]
Tissu.TAO<-rep("TAO",nrow(sig.TAO))
updown.TAO<-cbind(rowMeans(dat.TAO.filtered[rownames(dat.TAO.filtered)%in%sig.TAO[,1],label.TAO==1]),rowMeans(dat.TAO.filtered[rownames(dat.TAO.filtered)%in%sig.TAO[,1],label.TAO==0]))
res.TAO<-data.frame(sig.TAO$probeID,desc.sig.TAO$SYMBOL,Tissu.TAO,ifelse(updown.TAO[,1]>updown.TAO[,2],1,0),sig.TAO$Stat,sig.TAO$RawpValue,sig.TAO$FoldChange,desc.sig.TAO$DEFINITION)
colnames(res.TAO)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "RawpValue",   "FoldChange",  "DEFINITION")
desc.sig.TAM<-dat.TAM.src[dat.TAM.src[,1]%in%sig.TAM[,1],c("SYMBOL","DEFINITION")]
Tissu.TAM<-rep("TAM",nrow(sig.TAM))
updown.TAM<-cbind(rowMeans(dat.TAM.filtered[rownames(dat.TAM.filtered)%in%sig.TAM[,1],label.TAM==1]),rowMeans(dat.TAM.filtered[rownames(dat.TAM.filtered)%in%sig.TAM[,1],label.TAM==0]))
res.TAM<-data.frame(sig.TAM$probeID,desc.sig.TAM$SYMBOL,Tissu.TAM,ifelse(updown.TAM[,1]>updown.TAM[,2],1,0),sig.TAM$Stat,sig.TAM$RawpValue,sig.TAM$FoldChange,desc.sig.TAM$DEFINITION)
colnames(res.TAM)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "RawpValue",   "FoldChange",  "DEFINITION")
rs.TAO<-samt(dat.TAO.filtered, label.TAO)
rs.TAO<-samt(dat.TAO.filtered, label.TAO.t)
desc.sig.TAO<-dat.TAO.src[dat.TAO.src[,1]%in%sig.TAO[,1],c("SYMBOL","DEFINITION")]
Tissu.TAO<-rep("TAO",nrow(sig.TAO))
updown.TAO<-cbind(rowMeans(dat.TAO.filtered[rownames(dat.TAO.filtered)%in%sig.TAO[,1],label.TAO==1]),rowMeans(dat.TAO.filtered[rownames(dat.TAO.filtered)%in%sig.TAO[,1],label.TAO==0]))
res.TAO<-data.frame(sig.TAO$probeID,desc.sig.TAO$SYMBOL,Tissu.TAO,ifelse(updown.TAO[,1]>updown.TAO[,2],1,0),sig.TAO$Stat,sig.TAO$RawpValue,sig.TAO$FoldChange,desc.sig.TAO$DEFINITION)
colnames(res.TAO)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "RawpValue",   "FoldChange",  "DEFINITION")
res.TAO
rs.TASC<-samt(dat.TASC.filtered, label.TASC.t)
desc.sig.TASC<-dat.TASC.src[dat.TASC.src[,1]%in%sig.TASC[,1],c("SYMBOL","DEFINITION")]
Tissu.TASC<-rep("TASC",nrow(sig.TASC))
names(Tissu.TASC)<-"Tissue"
updown.TASC<-cbind(rowMeans(dat.TASC.filtered[rownames(dat.TASC.filtered)%in%sig.TASC[,1],label.TASC==1]),rowMeans(dat.TASC.filtered[rownames(dat.TASC.filtered)%in%sig.TASC[,1],label.TASC==0]))
res.TASC<-data.frame(sig.TASC$probeID,desc.sig.TASC$SYMBOL,Tissu.TASC,ifelse(updown.TASC[,1]>updown.TASC[,2],1,0),sig.TASC$Stat,sig.TASC$RawpValue,sig.TASC$FoldChange,desc.sig.TASC$DEFINITION)
colnames(res.TASC)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "RawpValue",   "FoldChange",  "DEFINITION")
res.TASC
rs.TASC
Tissu.TASC<-rep("TASC",nrow(sig.TASC))
names(Tissu.TASC)<-"Tissue"
Tissu.TASC
Tissu.TAO
rs.TAO
Tissu.TAO<-rep("TAO",length(rs.TAO$probeID))
Tissu.TAM<-rep("TAM",length(rs.TAM$probeID))
Tissu.TAM
rs.TAM
Tissu.liver<-rep("liver",length(rs.liver$probeID))
rs.liver
desc.sig.liver<-dat.liver.src[dat.liver.src[,1]%in%sig.liver[,1],c("SYMBOL","DEFINITION")]
Tissu.liver<-rep("liver",length(rs.liver$probeID))
updown.liver<-cbind(rowMeans(dat.liver.filtered[rownames(dat.liver.filtered)%in%sig.liver[,1],label.liver==1]),rowMeans(dat.liver.filtered[rownames(dat.liver.filtered)%in%sig.liver[,1],label.liver==0]))
res.liver<-data.frame(sig.liver$probeID,desc.sig.liver$SYMBOL,Tissu.liver,ifelse(updown.liver[,1]>updown.liver[,2],1,0),sig.liver$Stat,sig.liver$RawpValue,sig.liver$FoldChange,desc.sig.liver$DEFINITION)
colnames(res.liver)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "qValue",   "FoldChange",  "DEFINITION")
Tissu.liver
desc.sig.liver<-dat.liver.src[dat.liver.src[,1]%in%sig.liver[,1],c("SYMBOL","DEFINITION")]
rs.liver[,1]
desc.sig.liver<-dat.liver.src[dat.liver.src[,1]%in%rs.liver$probeID,c("SYMBOL","DEFINITION")]
desc.sig.liver<-dat.liver.src[dat.liver.src[,1]%in%rs.liver$probeID,c("SYMBOL","DEFINITION")]
Tissu.liver<-rep("liver",length(rs.liver$probeID))
updown.liver<-cbind(rowMeans(dat.liver.filtered[rownames(dat.liver.filtered)%in%sig.liver[,1],label.liver==1]),rowMeans(dat.liver.filtered[rownames(dat.liver.filtered)%in%sig.liver[,1],label.liver==0]))
res.liver<-data.frame(sig.liver$probeID,desc.sig.liver$SYMBOL,Tissu.liver,ifelse(updown.liver[,1]>updown.liver[,2],1,0),sig.liver$Stat,sig.liver$RawpValue,sig.liver$FoldChange,desc.sig.liver$DEFINITION)
colnames(res.liver)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "qValue",   "FoldChange",  "DEFINITION")
desc.sig.liver
Tissu.liver<-rep("liver",length(rs.liver$probeID))
Tissu.liver
updown.liver
desc.sig.liver<-dat.liver.src[dat.liver.src[,1]%in%sig.liver$probeID,c("SYMBOL","DEFINITION")]
Tissu.liver<-rep("liver",length(sig.liver$probeID))
updown.liver<-cbind(rowMeans(dat.liver.filtered[rownames(dat.liver.filtered)%in%sig.liver[,1],label.liver==1]),rowMeans(dat.liver.filtered[rownames(dat.liver.filtered)%in%sig.liver[,1],label.liver==0]))
res.liver<-data.frame(sig.liver$probeID,desc.sig.liver$SYMBOL,Tissu.liver,ifelse(updown.liver[,1]>updown.liver[,2],1,0),sig.liver$Stat,sig.liver$RawpValue,sig.liver$FoldChange,desc.sig.liver$DEFINITION)
colnames(res.liver)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "qValue",   "FoldChange",  "DEFINITION")
res.liver
sig.TAM<-rs.TAM
rs.TAM
rs.TAM
sig.TAM<-samt(dat.TAM.filtered, label.TAM.t)
desc.sig.TAM<-dat.TAM.src[dat.TAM.src[,1]%in%sig.TAM$probeID,c("SYMBOL","DEFINITION")]
Tissu.TAM<-rep("TAM",length(sig.TAM$probeID))
updown.TAM<-cbind(rowMeans(dat.TAM.filtered[rownames(dat.TAM.filtered)%in%sig.TAM[,1],label.TAM==1]),rowMeans(dat.TAM.filtered[rownames(dat.TAM.filtered)%in%sig.TAM[,1],label.TAM==0]))
res.TAM<-data.frame(sig.TAM$probeID,desc.sig.TAM$SYMBOL,Tissu.TAM,ifelse(updown.TAM[,1]>updown.TAM[,2],1,0),sig.TAM$Stat,sig.TAM$RawpValue,sig.TAM$FoldChange,desc.sig.TAM$DEFINITION)
colnames(res.TAM)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "RawpValue",   "FoldChange",  "DEFINITION")
desc.sig.liver<-dat.liver.src[dat.liver.src[,1]%in%sig.liver$probeID,c("SYMBOL","DEFINITION")]
Tissu.liver<-rep("liver",length(sig.liver$probeID))
updown.liver<-cbind(rowMeans(dat.liver.filtered[rownames(dat.liver.filtered)%in%sig.liver$probeID,label.liver==1]),rowMeans(dat.liver.filtered[rownames(dat.liver.filtered)%in%sig.liver$probeID,label.liver==0]))
res.liver<-data.frame(sig.liver$probeID,desc.sig.liver$SYMBOL,Tissu.liver,ifelse(updown.liver[,1]>updown.liver[,2],1,0),sig.liver$Stat,sig.liver$RawpValue,sig.liver$FoldChange,desc.sig.liver$DEFINITION)
colnames(res.liver)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "qValue",   "FoldChange",  "DEFINITION")
res.liver
desc.sig.TAM<-dat.TAM.src[dat.TAM.src[,1]%in%sig.TAM$probeID,c("SYMBOL","DEFINITION")]
Tissu.TAM<-rep("TAM",length(sig.TAM$probeID))
updown.TAM<-cbind(rowMeans(dat.TAM.filtered[rownames(dat.TAM.filtered)%in%sig.TAM$probeID,label.TAM==1]),rowMeans(dat.TAM.filtered[rownames(dat.TAM.filtered)%in%sig.TAM$probeID,label.TAM==0]))
res.TAM<-data.frame(sig.TAM$probeID,desc.sig.TAM$SYMBOL,Tissu.TAM,ifelse(updown.TAM[,1]>updown.TAM[,2],1,0),sig.TAM$Stat,sig.TAM$RawpValue,sig.TAM$FoldChange,desc.sig.TAM$DEFINITION)
colnames(res.TAM)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "RawpValue",   "FoldChange",  "DEFINITION")
res.TAM
sig.TAM
sig.TAO<-rs.TAO
sig.TAO
desc.sig.TAO<-dat.TAO.src[dat.TAO.src[,1]%in%sig.TAO$probeID,c("SYMBOL","DEFINITION")]
Tissu.TAO<-rep("TAO",length(sig.TAO$probeID))
updown.TAO<-cbind(rowMeans(dat.TAO.filtered[rownames(dat.TAO.filtered)%in%sig.TAO$probeID,label.TAO==1]),rowMeans(dat.TAO.filtered[rownames(dat.TAO.filtered)%in%sig.TAO$probeID,label.TAO==0]))
res.TAO<-data.frame(sig.TAO$probeID,desc.sig.TAO$SYMBOL,Tissu.TAO,ifelse(updown.TAO[,1]>updown.TAO[,2],1,0),sig.TAO$Stat,sig.TAO$RawpValue,sig.TAO$FoldChange,desc.sig.TAO$DEFINITION)
colnames(res.TAO)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "RawpValue",   "FoldChange",  "DEFINITION")
res.TAO
sig.TASC<-rs.TASC
rs.TASC
desc.sig.TASC<-dat.TASC.src[dat.TASC.src[,1]%in%sig.TASC$probeID,c("SYMBOL","DEFINITION")]
Tissu.TASC<-rep("TASC",nrow(sig.TASC))
names(Tissu.TASC)<-"Tissue"
updown.TASC<-cbind(rowMeans(dat.TASC.filtered[rownames(dat.TASC.filtered)%in%sig.TASC$probeID,label.TASC==1]),rowMeans(dat.TASC.filtered[rownames(dat.TASC.filtered)%in%sig.TASC$probeID,label.TASC==0]))
res.TASC<-data.frame(sig.TASC$probeID,desc.sig.TASC$SYMBOL,Tissu.TASC,ifelse(updown.TASC[,1]>updown.TASC[,2],1,0),sig.TASC$Stat,sig.TASC$RawpValue,sig.TASC$FoldChange,desc.sig.TASC$DEFINITION)
colnames(res.TASC)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "RawpValue",   "FoldChange",  "DEFINITION")
desc.sig.TASC<-dat.TASC.src[dat.TASC.src[,1]%in%sig.TASC$probeID,c("SYMBOL","DEFINITION")]
Tissu.TASC<-rep("TASC",length(sig.TASC$probeID))
names(Tissu.TASC)<-"Tissue"
updown.TASC<-cbind(rowMeans(dat.TASC.filtered[rownames(dat.TASC.filtered)%in%sig.TASC$probeID,label.TASC==1]),rowMeans(dat.TASC.filtered[rownames(dat.TASC.filtered)%in%sig.TASC$probeID,label.TASC==0]))
res.TASC<-data.frame(sig.TASC$probeID,desc.sig.TASC$SYMBOL,Tissu.TASC,ifelse(updown.TASC[,1]>updown.TASC[,2],1,0),sig.TASC$Stat,sig.TASC$RawpValue,sig.TASC$FoldChange,desc.sig.TASC$DEFINITION)
colnames(res.TASC)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "RawpValue",   "FoldChange",  "DEFINITION")
res.TASC
res.liver.TAM.TAO.TASC<-rbind(res.liver,res.TAM,res.TAO,res.TASC)
write.table(res.liver.TAM.TAO.TASC,file=paste(output.dir,"/significant_genes_liver_TAM_TAO_TASC_logged2.txt",sep=""),col.names=T,row.names=F,quote=F,sep="\t")
colnames(res.liver)<-c("probeID",   "SYMBOL",  "Tissu", "NASH>NON_NASH",  "Stat",    "RawpValue",   "FoldChange",  "DEFINITION")
res.liver.TAM.TAO.TASC<-rbind(res.liver,res.TAM,res.TAO,res.TASC)
write.table(res.liver.TAM.TAO.TASC,file=paste(output.dir,"/significant_genes_liver_TAM_TAO_TASC_logged2.txt",sep=""),col.names=T,row.names=F,quote=F,sep="\t")
rs.TAO
length(siggenes.table$genes.up)
siggenes.table$genes.up
nrow(siggenes.table$genes.up)
c(rep("UP",nrow(siggenes.table$genes.up)),rep("LOW",nrow(siggenes.table$genes.lo)))
?samr.compute.siggenes.table
samt<-function(x,y){
data=list(x=log2(x),y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=100)
delta.table <- samr.compute.delta.table(samr.obj)
siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)
return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],
UpLow=c(rep("UP",nrow(siggenes.table$genes.up)),rep("LOW",nrow(siggenes.table$genes.lo)))
Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],
RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],
FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7]))
}
samt<-function(x,y){
data=list(x=log2(x),y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=100)
delta.table <- samr.compute.delta.table(samr.obj)
siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)
return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],
UpLow=c(rep("UP",nrow(siggenes.table$genes.up)),rep("LOW",nrow(siggenes.table$genes.lo))),
Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],
RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],
FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7]))
}
samt<-function(x,y,nperms=100){
data=list(x=log2(x),y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=nperms)
delta.table <- samr.compute.delta.table(samr.obj)
siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)
return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],
UpLow=c(rep("UP",nrow(siggenes.table$genes.up)),rep("LOW",nrow(siggenes.table$genes.lo))),
Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],
RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],
FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7]))
}
sig.liver.200<-samt(dat.liver.filtered, label.liver.t,200)
.200<-samt(dat.liver.filtered, label.liver.t,nperms)
sig.liver.200
sig.liver.200$ProbeID
sig.liver.200$probeID
sig.liver$probeID
sig.liver.500<-samt(dat.liver.filtered, label.liver.t,500)
sig.liver.500$probeID
sig.liver.200$probeID
sig.liver$probeID
sig.TAM.200<-samt(dat.TAM.filtered, label.TAM.t,200)
sig.TAM
rep("UP",0)
nup<-ifesle(nrow(siggenes.table$genes.up)==0,0,nrow(siggenes.table$genes.up))
nup<-ifelse(nrow(siggenes.table$genes.up)==0,0,nrow(siggenes.table$genes.up))
nlo<-ifelse(nrow(siggenes.table$genes.lo)==0,0,nrow(siggenes.table$genes.lo))
samt<-function(x,y,nperms=100){
data=list(x=log2(x),y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=nperms)
delta.table <- samr.compute.delta.table(samr.obj)
siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)
nup<-ifelse(nrow(siggenes.table$genes.up)==0,0,nrow(siggenes.table$genes.up))
nlo<-ifelse(nrow(siggenes.table$genes.lo)==0,0,nrow(siggenes.table$genes.lo))
return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],
UpLow=c(rep("UP",nup),rep("LOW",nlo)),
Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],
RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],
FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7]))
}
sig.TAM<-samt(dat.TAM.filtered, label.TAM.t,200)
siggenes.table
samt<-function(x,y,nperms=100){
data=list(x=log2(x),y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=nperms)
delta.table <- samr.compute.delta.table(samr.obj)
siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)
return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],
UpLow=c(rep("UP",siggenes.table$ngenes.up),rep("LOW",siggenes.table$ngenes.lo)),
Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],
RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],
FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7]))
}
sig.TAM<-samt(dat.TAM.filtered, label.TAM.t,200)
sig.TAM
sig.TAM<-samt(dat.TAM.filtered, label.TAM.t,10)
sig.TAM
sig.TAM<-samt(dat.TAM.filtered, label.TAM.t,50)
sig.TAM
sig.TAM<-samt(dat.TAM.filtered, label.TAM.t,10)
sig.TAM
sig.TAM<-samt(dat.TAM.filtered, label.TAM.t,10)
sig.TAM
sig.TAM<-samt(dat.TAM.filtered, label.TAM.t,5)
sig.TAM
sig.TAM<-samt(dat.TAM.filtered, label.TAM.t,10)
sig.TAM
samt<-function(x,y,nperms=100){
data=list(x=log2(x),y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=nperms)
delta.table <- samr.compute.delta.table(samr.obj)
siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)
return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],
UpLow=c(rep("UP",siggenes.table$ngenes.up),rep("LOW",siggenes.table$ngenes.lo)),
Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],
RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],
FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7],
nsiggenes=siggenes.table$ngenes.up+siggenes.table$ngenes.lo))
}
seq(1:200,10)
seq(1,200,10)
seq(0,200,10)
seq(10,200,10)
sapply(seq(10,200,10),function(x) length(samt(dat.TAM.filtered, label.TAM.t,x)$nsiggenes))
sapply(seq(10,200,10),function(x) print(length(samt(dat.TAM.filtered, label.TAM.t,x)$nsiggenes)))
sapply(seq(10,200,10),function(x) print(paste("nperms=",x,"nsiggenes=",length(samt(dat.TAM.filtered, label.TAM.t,x)$nsiggenes))))
out.log<-do.call(rbind,sapply(seq(10,200,10),function(x) print(paste(x,length(samt(dat.TAM.filtered, label.TAM.t,x)$nsiggenes)))))
out.log<-do.call(rbind,sapply(seq(10,50,10),function(x) print(paste(x,length(samt(dat.TAM.filtered, label.TAM.t,x)$nsiggenes)))))
out.log
?do.call
do.call("complex", list(imag = 1:3))
out.log<-do.call(rbind,sapply(seq(10,50,10),function(x) list(x,length(samt(dat.TAM.filtered, label.TAM.t,x)$nsiggenes))))
out.log<-do.call(rbind,sapply(seq(10,20,10),function(x) list(x,length(samt(dat.TAM.filtered, label.TAM.t,x)$nsiggenes))))
out.log
out.log<-do.call(cbind,sapply(seq(10,20,10),function(x) list(x,length(samt(dat.TAM.filtered, label.TAM.t,x)$nsiggenes))))
out.log
out.log<-do.call(cbind,sapply(seq(10,20,10),function(x) as.vector(x,length(samt(dat.TAM.filtered, label.TAM.t,x)$nsiggenes))))
out.log<-do.call(cbind,sapply(seq(10,20,10),function(x) c(x,length(samt(dat.TAM.filtered, label.TAM.t,x)$nsiggenes))))
out.log<-do.call(c,sapply(seq(10,20,10),function(x) list(x,length(samt(dat.TAM.filtered, label.TAM.t,x)$nsiggenes))))
out.log
out.log<-do.call(cbind,sapply(seq(10,20,10),function(x) list(c(x,length(samt(dat.TAM.filtered, label.TAM.t,x)$nsiggenes)))))
out.log
out.log<-do.call(rbind,sapply(seq(10,20,10),function(x) list(c(x,length(samt(dat.TAM.filtered, label.TAM.t,x)$nsiggenes)))))
out.log
out.log<-do.call(rbind,sapply(seq(10,200,10),function(x) list(c(x,length(samt(dat.TAM.filtered, label.TAM.t,x)$nsiggenes)))))
names(samr.obj)
samr.obj
?samr
delta.table
?samr.compute.siggenes.table
out.log
max(out.log[,2])
out.log[,2]==max(out.log[,2])
which(out.log[,2]==max(out.log[,2]))
which(out.log[,2]==max(out.log[,2]))[1]
out.log[which(out.log[,2]==max(out.log[,2]))[1],1]
nperms.samr.opt<-function(dat,labels){
out.log<-do.call(rbind,sapply(seq(10,200,10),function(x) list(c(x,length(samt(dat, labels,x)$nsiggenes)))))
return(out.log[which(out.log[,2]==max(out.log[,2]))[1],1])
}
plot(out.log)
samt<-function(x,y,nperms=100,opt=F){
data=list(x=log2(x),y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)
if(opt){
out.log<-do.call(rbind,sapply(seq(10,200,10),function(x) list(c(x,length(samt(dat, labels,x)$nsiggenes)))))
nperms<-out.log[which(out.log[,2]==max(out.log[,2]))[1],1]
plot(out.log)
}
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=nperms)
delta.table <- samr.compute.delta.table(samr.obj)
siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)
return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],
UpLow=c(rep("UP",siggenes.table$ngenes.up),rep("LOW",siggenes.table$ngenes.lo)),
Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],
RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],
FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7],
nsiggenes=siggenes.table$ngenes.up+siggenes.table$ngenes.lo))
}
sig.liver<-samt(dat.liver.filtered, label.liver.t,opt=T)
samt<-function(x,y,nperms=100,opt=F){
data=list(x=log2(x),y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)
if(opt){
out.log<-do.call(rbind,sapply(seq(10,200,10),function(t) list(c(t,length(samt(x, y,t)$nsiggenes)))))
nperms<-out.log[which(out.log[,2]==max(out.log[,2]))[1],1]
plot(out.log)
}
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=nperms)
delta.table <- samr.compute.delta.table(samr.obj)
siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)
return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],
UpLow=c(rep("UP",siggenes.table$ngenes.up),rep("LOW",siggenes.table$ngenes.lo)),
Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],
RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],
FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7],
nsiggenes=siggenes.table$ngenes.up+siggenes.table$ngenes.lo))
}
sig.liver<-samt(dat.liver.filtered, label.liver.t,opt=T)
sig.liver
out.log
samt<-function(x,y,nperms=100,opt=F){
data=list(x=log2(x),y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)
if(opt){
out.log<-do.call(rbind,sapply(seq(10,50,10),function(t) list(c(t,length(samt(x, y,t)$nsiggenes)))))
nperms<-out.log[which(out.log[,2]==max(out.log[,2]))[1],1]
print(out.log)
plot(out.log)
}
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=nperms)
delta.table <- samr.compute.delta.table(samr.obj)
siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)
return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],
UpLow=c(rep("UP",siggenes.table$ngenes.up),rep("LOW",siggenes.table$ngenes.lo)),
Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],
RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],
FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7],
nsiggenes=siggenes.table$ngenes.up+siggenes.table$ngenes.lo))
}
sig.liver<-samt(dat.liver.filtered, label.liver.t,opt=T)
samt<-function(x,y,nperms=100,opt=F){
data=list(x=log2(x),y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)
if(opt){
out.log<-do.call(rbind,sapply(seq(10,50,10),function(t) list(c(t,samt(x, y,t)$nsiggenes))))
nperms<-out.log[which(out.log[,2]==max(out.log[,2]))[1],1]
print(out.log)
plot(out.log)
}
samr.obj<-samr(data,  resp.type="Two class unpaired", nperms=nperms)
delta.table <- samr.compute.delta.table(samr.obj)
siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)
pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)
return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],
UpLow=c(rep("UP",siggenes.table$ngenes.up),rep("LOW",siggenes.table$ngenes.lo)),
Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],
RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],
FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7],
nsiggenes=siggenes.table$ngenes.up+siggenes.table$ngenes.lo))
}
sig.liver<-samt(dat.liver.filtered, label.liver.t,opt=T)
sig.liver
sapply(1:10,function(x) { assign(paste("a", x, sep = ""), x) paste("a", x, sep = "")<-x})
paste("a",1:n,sep="")
paste("a",1:10,sep="")
library("qgraph")
íntall.packages("qgraph")
ínstall.packages("qgraph")
install.packages("qgraph")
library("goTools", verbose = FALSE) # Loads the required library.
source("http://bioconductor.org/biocLite.R")
biocLite("goTools")
library("goTools", verbose = FALSE) # Loads the required library.
my_list <- list(L1=c("245265_at", "260744_at", "259561_at", "254759_at", "267181_at"), L2=c("256497_at", "250942_at", "265611_at", "247488_at", "255148_at")) # Creates a working list with two components each consisting of Arabidopsis Affy IDs.
ontoCompare(my_list, probeType = "ath1121501", goType="MF")
# Provides compositional differences of the molecular function GOs between the Affy ID vectors contained in my_list.
ontoCompare(my_list, probeType = "ath1121501", goType="MF", plot=TRUE) # Plots the above MF GO compositions in bar diagram.
par(mar = c(5, 8, 5, 8)); res2 <- ontoCompare(my_list["L1"], probeType = "ath1121501", method="TIDS", goType="MF", plot=FALSE); ontoPlot(res2, cex = 0.7) # Plots pie chart for "L1" gene list component in my_list.
biocLite("goCluster")
library("goCluster", verbose = FALSE)
library("goCluster")
install.packages("goCluster",repos="http://bioconductor.org/packages/2.12/bioc",lib="/home/nguyen/R")
install.packages("goCluster",repos="http://bioconductor.org/packages/2.12/bioc")
install.packages("goCluster",repos="http://bioconductor.org/packages/2.9/bioc")
install.packages("goCluster",repos="http://bioconductor.org/packages/1.2/bioc")
install.packages("goCluster")
source("http://bioconductor.org/biocLite.R")
biocLite("RamiGO")
library("RamiGO")
library(RamiGO)
goIDs <- c("GO:0051130","GO:0019912","GO:0005783","GO:0043229","GO:0050789")
color <- c("lightblue","red","yellow","green","pink")
pngRes <- getAmigoTree(goIDs=goIDs, color=color, filename="example", picType="png", saveResult=TRUE)
pngRes
svgRes <- getAmigoTree(goIDs=goIDs, color=color, filename="example", picType="svg", saveResult=TRUE)
plot(pngRes)
goIDs <- c("GO:0051130","GO:0019912","GO:0005783")
color <- c("lightblue","red","yellow")
dd <- getAmigoTree(goIDs=goIDs,color=color,
filename="example",picType="dot",saveResult=FALSE)
tt <- readAmigoDot(object=dd)
## exportCytoGML is called inside adjM2gml
adjM2gml(adjMatrix(tt),relations(tt)$color,
annot(tt)$fillcolor,annot(tt)$GO_ID,
annot(tt)$description,"example")
