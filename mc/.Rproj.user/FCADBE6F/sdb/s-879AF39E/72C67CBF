{
    "contents" : "#########################################\n# DEG.R - Differentially Expressed Genes\n# Author: Hoai Tuong Nguyen\n# Created: 16/07/2013\n# Modified: 16/07/2013\n# CMD: R --no-save --no-restore --slave -f DEG.R \"--args input.dir='?' output.dir='?'\"\n#########################################\n\n#initial configurations\n#create RData for input\ncreateRData=F\n\n#install import library:\n#install.packages(\"EMA\",repos=\"http://bioconductor.org/packages/2.12/bioc\",lib=\"/home/nguyen/R\") \n#install.packages(\"samr\",repos=\"http://bioconductor.org/packages/2.12/bioc\",lib=\"/home/nguyen/R\") \n#install.packages(\"edgeR\",repos=\"http://bioconductor.org/packages/2.9/bioc\",lib=\"/home/nguyen/R\")\ninstall.packages(\"DESeq\",repos=\"http://bioconductor.org/packages/2.9/bioc\",lib=\"/home/nguyen/R\")\n\n#load EMA\nlibrary(EMA)\nlibrary(samr)\nlibrary(edgeR)\nlibrary(DESeq)\n\n#set working directory\nsetwd(\"/home/nguyen\")\n\n#default input and output paths\ninput.dir=\"1.data\"\noutput.dir=\"3.results\"\n\nis.even <- function(x){ x %% 2 == 0 } \n\n#load input data\n#dat.seq<-get(load(file=paste(input.dir,\"/metacardis/DonneeSequences_t0_global_counting_table.csv.gz.transformed.RData\",sep=\"\")))\ndat.seq.t0.counts<-get(load(file=\"/home/DATA/DATA_RCODES/SEQUENCES/t0_counts.RData\"))\ndat.seq.t0<-get(load(file=\"/home/DATA/DATA_RCODES/SEQUENCES/t0.RData\"))\n\ncolnames(dat.seq.t0.counts)<-gsub(\"_\",\"-\",substr(toupper(colnames(dat.seq.t0.counts)),regexpr(\"_\",\"S10_LAJ_AN_T0\")[1]+1,nchar(toupper(colnames(dat.seq.t0.counts)))-3))\ncolnames(dat.seq.t0)<-gsub(\"_\",\"-\",substr(toupper(colnames(dat.seq.t0)),regexpr(\"_\",\"S10_LAJ_AN_T0\")[1]+1,nchar(toupper(colnames(dat.seq.t0)))-3))\n\ndat.ge.t0<-get(load(file=paste(input.dir,\"/metacardis/GE_t0.RData\",sep=\"\")))\nn.na<-sapply(1:ncol(dat.ge.t0),function(x) sum(is.na(dat.ge.t0[,x]))) \ndat.ge.nona.t0<-dat.ge.t0[,which(n.na==0)]\ndat.ge<-t(dat.ge.nona.t0)\n\n\n\nge.lm.classified.adfm.t0<-read.csv(sprintf(\"%s/CLASSIFICATION/Subjects/labels/ge-nona_lm_t0_Adipocyte-diameter_vs_Fat-mass_points.csv\",output.dir),row.names=1)\nge.lm.classified.adwh2.t0<-read.csv(sprintf(\"%s/CLASSIFICATION/Subjects/labels/ge-nona_lm_t0_Adipocyte-diameter_vs_Waist_Height2_points.csv\",output.dir),row.names=1)\nge.lm.classified.adfmh2.t0<-read.csv(sprintf(\"%s/CLASSIFICATION/Subjects/labels/ge-nona_lm_t0_Adipocyte-diameter_vs_Fat-mass_Height2_points.csv\",output.dir),row.names=1)\nge.lm.classified.wfmh2.t0<-read.csv(sprintf(\"%s/CLASSIFICATION/Subjects/labels/ge-nona_lw_t0_Waist_vs_Fat-mass_Height2_points.csv\",output.dir),row.names=1)\nge.lm.classified.adh2.t0<-read.csv(sprintf(\"%s/CLASSIFICATION/Subjects/labels/ge-nona_lm_t0_Adipocyte-diameter_vs_Height2_points.csv\",output.dir),row.names=1)\nge.lm.classified.adbmifma.t0<-read.csv(sprintf(\"%s/CLASSIFICATION/Subjects/labels/ge-nona_lm_t0_Adipocyte-diameter_vs_BMI-Fat-mass-Age_points.csv\",output.dir),row.names=1)\n\n\ncommon.ge<-intersect(rownames(ge.lm.classified.adfm.t0),colnames(dat.seq.t0))\ncommon.dat.seq.t0<-dat.seq.t0[,common.ge]\n\ncommon.ge.count<-intersect(rownames(ge.lm.classified.adfm.t0),colnames(dat.seq.t0.counts))\ncommon.dat.seq.t0.counts<-dat.seq.t0.counts[,common.ge.count]\n\n\nge.lm.classified.adfm.t0.label<-ge.lm.classified.adfm.t0[common.ge,3]\nge.lm.classified.adwh2.t0.label<-ge.lm.classified.adwh2.t0[common.ge,3]\nge.lm.classified.adfmh2.t0.label<-ge.lm.classified.adfmh2.t0[common.ge,3]\nge.lm.classified.wfmh2.t0.label<-ge.lm.classified.wfmh2.t0[common.ge,3]\nge.lm.classified.adh2.t0.label<-ge.lm.classified.adh2.t0[common.ge,3]\nge.lm.classified.adbmifma.t0.label<-ge.lm.classified.adbmifma.t0[common.ge,3]\n\n\n\n\n\n\nrt.ge.lm.classified.adfm.t0<-runTtest(common.dat.seq.t0, labels=ge.lm.classified.adfm.t0.label, typeFDR=\"FDR-BH\",algo=\"t\", q=0.1, plot=FALSE)\nrt.ge.lm.classified.adwh2.t0<-runTtest(common.dat.seq.t0, labels=ge.lm.classified.adwh2.t0.label, typeFDR=\"FDR-BH\",algo=\"t\", q=0.1, plot=FALSE)\nrt.ge.lm.classified.adfmh2.t0<-runTtest(common.dat.seq.t0, labels=ge.lm.classified.adfmh2.t0.label, typeFDR=\"FDR-BH\",algo=\"t\", q=0.1, plot=FALSE)\nrt.ge.lm.classified.wfmh2.t0<-runTtest(common.dat.seq.t0, labels=ge.lm.classified.wfmh2.t0.label, typeFDR=\"FDR-BH\",algo=\"t\", q=0.1, plot=FALSE)\nrt.ge.lm.classified.adh2.t0<-runTtest(common.dat.seq.t0, labels=ge.lm.classified.adh2.t0.label, typeFDR=\"FDR-BH\",algo=\"t\", q=0.1, plot=FALSE)\nrt.ge.lm.classified.adbmifma.t0<-runTtest(common.dat.seq.t0, labels=ge.lm.classified.adbmifma.t0.label, typeFDR=\"FDR-BH\",algo=\"t\", q=0.1, plot=FALSE)\n\n\n\n\n\nsamt<-function(x,y,nperms=100,opt=F, logged2=T){\n  if(logged2)\n    x<-log2(x)\n  data<-list(x=x,y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)\n  samr.obj<-samr(data,  resp.type=\"Two class unpaired\", nperms=nperms)\n  delta.table <- samr.compute.delta.table(samr.obj)\n  delta<-0.45\n  siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)\n  samr.assess.samplesize.obj<- samr.assess.samplesize(samr.obj, data, log2(2))\n  pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)\n  return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],\n              UpLow=c(rep(\"UP\",siggenes.table$ngenes.up),rep(\"LOW\",siggenes.table$ngenes.lo)),\n              Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],\n              RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],\n              FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7],\n              FDR=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,8],\n              nsiggenes=siggenes.table$ngenes.up+siggenes.table$ngenes.lo))\n}\n\nsamt.opt<-function(x,y,nmax.perms=100, logged2=T){\n  if(logged2)\n    x<-log2(x)\n  data<-list(x=x,y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)\n  bins<-seq(10,nmax.perms,10)\n  \n  out.log<-do.call(rbind,sapply(bins,function(t){\n    samres<-samt(x, y,t)\n    list(c(nperms=t,nsiggenes=samres$nsiggenes,samres=samres))\n  }\n  ))\n  nperms.opt<-as.numeric(out.log[which(unlist(out.log[,2])==max(unlist(out.log[,2]))),1])\n  \n  samres.opt<-out.log[which(unlist(out.log[,2])==max(unlist(out.log[,2]))),3:ncol(out.log)]\n  print(paste(\"Optimal number of permuations:\",nperms.opt))\n  print(samres.opt)\n  plot(out.log[,1:2])\n  \n  return(samres.opt)\n}\n\nge.lm.classified.adfm.t0.label.t<-ge.lm.classified.adfm.t0.label\nge.lm.classified.adwh2.t0.label.t<-ge.lm.classified.adwh2.t0.label\nge.lm.classified.adfmh2.t0.label.t<-ge.lm.classified.adfmh2.t0.label\nge.lm.classified.wfmh2.t0.label.t<-ge.lm.classified.wfmh2.t0.label\nge.lm.classified.adbmifma.t0.label.t<-ge.lm.classified.adbmifma.t0.label\n\nge.lm.classified.adfm.t0.label.t[ge.lm.classified.adfm.t0.label.t==0]<-2\nge.lm.classified.adwh2.t0.label.t[ge.lm.classified.adwh2.t0.label.t==0]<-2\nge.lm.classified.adfmh2.t0.label.t[ge.lm.classified.adfmh2.t0.label.t==0]<-2\nge.lm.classified.wfmh2.t0.label.t[ge.lm.classified.wfmh2.t0.label.t==0]<-2\nge.lm.classified.adbmifma.t0.label.t[ge.lm.classified.adbmifma.t0.label.t==0]<-2\n\n\nsig.ge.lm.classified.adfm.t0<-samt.opt(dat.ge, ge.lm.classified.adfm.t0.label.t,nmax.perms=200)\nres.sig.ge.lm.classified.adfm.t0<-data.frame(sig.ge.lm.classified.adfm.t0$samres.probeID,\n                                             rep(\"ADFM.T0\",length(sig.ge.lm.classified.adfm.t0$samres.probeID)),\n                                             sig.ge.lm.classified.adfm.t0$samres.UpLow,\n                                             sig.ge.lm.classified.adfm.t0$samres.Stat,\n                                             sig.ge.lm.classified.adfm.t0$samres.RawpValue,\n                                             sig.ge.lm.classified.adfm.t0$samres.FoldChange,\n                                             sig.ge.lm.classified.adfm.t0$samres.FDR)\ncolnames(res.sig.ge.lm.classified.adfm.t0)<-c(\"probeID\", \"Index\", \"UpLow\", \"Stat\",    \"RawpValue\",   \"FoldChange\", \"FDR(%)\")\nwrite.table(res.sig.ge.lm.classified.adfm.t0,file=sprintf(\"%s/CLASSIFICATION/Subjects/diff/ge-nona_lm_t0_Adipocyte-diameter_vs_Fat-mass_siggenes.csv\",output.dir),col.names=T,row.names=F,quote=F,sep=\"\\t\")\n\n\n\nsig.ge.lm.classified.adwh2.t0<-samt.opt(dat.ge, ge.lm.classified.adwh2.t0.label.t,nmax.perms=200)\nres.sig.ge.lm.classified.adwh2.t0<-data.frame(sig.ge.lm.classified.adwh2.t0$samres.probeID,\n                                              rep(\"ADFM.T0\",length(sig.ge.lm.classified.adwh2.t0$samres.probeID)),\n                                              sig.ge.lm.classified.adwh2.t0$samres.UpLow,\n                                              sig.ge.lm.classified.adwh2.t0$samres.Stat,\n                                              sig.ge.lm.classified.adwh2.t0$samres.RawpValue,\n                                              sig.ge.lm.classified.adwh2.t0$samres.FoldChange,\n                                              sig.ge.lm.classified.adwh2.t0$samres.FDR)\ncolnames(res.sig.ge.lm.classified.adwh2.t0)<-c(\"probeID\", \"Index\", \"UpLow\", \"Stat\",    \"RawpValue\",   \"FoldChange\", \"FDR(%)\")\nwrite.table(res.sig.ge.lm.classified.adwh2.t0,file=sprintf(\"%s/CLASSIFICATION/Subjects/diff/ge-nona_lm_t0_Adipocyte-diameter_vs_Waist_Height2_siggenes.csv\",output.dir),col.names=T,row.names=F,quote=F,sep=\"\\t\")\n\n\n\nsig.ge.lm.classified.adfmh2.t0<-samt.opt(dat.ge, ge.lm.classified.adfmh2.t0.label.t,nmax.perms=200)\nres.sig.ge.lm.classified.adfmh2.t0<-data.frame(sig.ge.lm.classified.adfmh2.t0$samres.probeID,\n                                               rep(\"ADFMH2.T0\",length(sig.ge.lm.classified.adfmh2.t0$samres.probeID)),\n                                               sig.ge.lm.classified.adfmh2.t0$samres.UpLow,\n                                               sig.ge.lm.classified.adfmh2.t0$samres.Stat,\n                                               sig.ge.lm.classified.adfmh2.t0$samres.RawpValue,\n                                               sig.ge.lm.classified.adfmh2.t0$samres.FoldChange,\n                                               sig.ge.lm.classified.adfmh2.t0$samres.FDR)\ncolnames(res.sig.ge.lm.classified.adfmh2.t0)<-c(\"probeID\", \"Index\", \"UpLow\", \"Stat\",    \"RawpValue\",   \"FoldChange\", \"FDR(%)\")\nwrite.table(res.sig.ge.lm.classified.adfmh2.t0,file=sprintf(\"%s/CLASSIFICATION/Subjects/diff/ge-nona_lm_t0_Adipocyte-diameter_vs_Fat-mass_Height2_siggenes.csv\",output.dir),col.names=T,row.names=F,quote=F,sep=\"\\t\")\n\n\nsig.ge.lm.classified.wfmh2.t0<-samt.opt(dat.ge, ge.lm.classified.wfmh2.t0.label.t,nmax.perms=200)\nres.sig.ge.lm.classified.wfmh2.t0<-data.frame(sig.ge.lm.classified.wfmh2.t0$samres.probeID,\n                                              rep(\"WFMH2.T0\",length(sig.ge.lm.classified.wfmh2.t0$samres.probeID)),\n                                              sig.ge.lm.classified.wfmh2.t0$samres.UpLow,\n                                              sig.ge.lm.classified.wfmh2.t0$samres.Stat,\n                                              sig.ge.lm.classified.wfmh2.t0$samres.RawpValue,\n                                              sig.ge.lm.classified.wfmh2.t0$samres.FoldChange,\n                                              sig.ge.lm.classified.wfmh2.t0$samres.FDR)\ncolnames(res.sig.ge.lm.classified.wfmh2.t0)<-c(\"probeID\", \"Index\", \"UpLow\", \"Stat\",    \"RawpValue\",   \"FoldChange\", \"FDR(%)\")\nwrite.table(res.sig.ge.lm.classified.wfmh2.t0,file=sprintf(\"%s/CLASSIFICATION/Subjects/diff/ge-nona_lw_t0_Waist_vs_Fat-mass_Height2_siggenes.csv\",output.dir),col.names=T,row.names=F,quote=F,sep=\"\\t\")\n\n\n\nsig.ge.lm.classified.adbmifma.t0.t0<-samt.opt(dat.ge, ge.lm.classified.adbmifma.t0.label.t,nmax.perms=200)\nres.sig.ge.lm.classified.adbmifma.t0.t0<-data.frame(sig.ge.lm.classified.adbmifma.t0.t0$samres.probeID,\n                                                    rep(\"ADBMIFMA.T0\",length(sig.ge.lm.classified.adbmifma.t0.t0$samres.probeID)),\n                                                    sig.ge.lm.classified.adbmifma.t0.t0$samres.UpLow,\n                                                    sig.ge.lm.classified.adbmifma.t0.t0$samres.Stat,\n                                                    sig.ge.lm.classified.adbmifma.t0.t0$samres.RawpValue,\n                                                    sig.ge.lm.classified.adbmifma.t0.t0$samres.FoldChange,\n                                                    sig.ge.lm.classified.adbmifma.t0.t0$samres.FDR)\ncolnames(res.sig.ge.lm.classified.adbmifma.t0.t0)<-c(\"probeID\", \"Index\", \"UpLow\", \"Stat\",    \"RawpValue\",   \"FoldChange\", \"FDR(%)\")\nwrite.table(res.sig.ge.lm.classified.adbmifma.t0.t0,file=sprintf(\"%s/CLASSIFICATION/Subjects/diff/ge-nona_lm_t0_Adipocyte-diameter_vs_BMI-Fat-mass-Age_siggenes.csv\",output.dir),col.names=T,row.names=F,quote=F,sep=\"\\t\")\n\n\n\n\ncds = newCountDataSet(common.dat.seq.t0.counts, ge.lm.classified.adfm.t0.label.t )\ncds = estimateSizeFactors(cds)\nsizeFactors(cds)\nhead(counts(cds, normalized=TRUE))\ncds = estimateDispersions( cds )\nres = nbinomTest( cds, \"1\", \"0\" )\n\n\n",
    "created" : 1374047563068.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "398847436",
    "id" : "72C67CBF",
    "lastKnownWriteTime" : 1375457774,
    "path" : "~/kavya/deg/2.scripts/DEG_adipo.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}