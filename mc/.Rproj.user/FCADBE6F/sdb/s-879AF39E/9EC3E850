{
    "contents" : "#########################################\n# DEG.R - Differentially Expressed Genes\n# Author: Hoai Tuong Nguyen\n# Created: 16/07/2013\n# Modified: 16/07/2013\n# CMD: R --no-save --no-restore --slave -f DEG.R \"--args input.dir='?' output.dir='?'\"\n#########################################\n\n#initial configurations\n#create RData for input\ncreateRData=F\n\n\n#load EMA\nlibrary(EMA)\n\n\n#set working directory\nsetwd(\"C:/Users/TUONG/Documents/kavya/deg\")\n\n#default input and output paths\ninput.dir=\"1.input\"\noutput.dir=\"3.output\"\n\n#I/O filenames\nifile.liver=paste(input.dir,\"/all-data-norm-liver.txt\",sep=\"\")\nifile.TAM=paste(input.dir,\"/all-data-norm-TAM.txt\",sep=\"\")\nifile.TAO=paste(input.dir,\"/all-data-norm-TAO.txt\",sep=\"\")\nifile.TASC=paste(input.dir,\"/all-data-norm-TASC.txt\",sep=\"\")\n\n\n#check & install EMA\n#Ref: http://bioinfo-out.curie.fr/projects/ema/\nif(!is.element(\"EMA\", installed.packages()[,1])){\n  source(\"http://bioconductor.org/biocLite.R\")\n  biocLite(\"EMA\")\n}\n\n\n#create RData for input\nif (createRData){\n  dat.liver<-read.csv(ifile.liver,header=T,sep=\"\\t\",dec = \",\");\n  dat.TAM<-read.csv(ifile.TAM,header=T,sep=\"\\t\",dec = \",\");\n  dat.TAO<-read.csv(ifile.TAO,header=T,sep=\"\\t\",dec = \",\");\n  dat.TASC<-read.csv(ifile.TASC,header=T,sep=\"\\t\",dec = \",\");\n  save(dat.liver,file=paste(input.dir,\"/all-datanorm-liver.RData\",sep=\"\"))\n  save(dat.TAM,file=paste(input.dir,\"/all-datanorm-TAM.RData\",sep=\"\"))\n  save(dat.TAO,file=paste(input.dir,\"/all-datanorm-TAO.RData\",sep=\"\"))\n  save(dat.TASC,file=paste(input.dir,\"/all-datanorm-TASC.RData\",sep=\"\"))\n}\n \nis.even <- function(x){ x %% 2 == 0 } \n\n#load input data\ndat.liver.src<-get(load(file=paste(input.dir,\"/all-datanorm-liver.RData\",sep=\"\")))\ndat.TAM.src<-get(load(file=paste(input.dir,\"/all-datanorm-TAM.RData\",sep=\"\")))\ndat.TAO.src<-get(load(file=paste(input.dir,\"/all-datanorm-TAO.RData\",sep=\"\")))\ndat.TASC.src<-get(load(file=paste(input.dir,\"/all-datanorm-TASC.RData\",sep=\"\")))\n\ncolnames(dat.liver.src)<-substr(colnames(dat.liver.src),0,13)\ncolnames(dat.TAM.src)<-substr(colnames(dat.TAM.src),0,13)\ncolnames(dat.TAO.src)<-substr(colnames(dat.TAO.src),0,13)\ncolnames(dat.TASC.src)<-substr(colnames(dat.TASC.src),0,13)\n\nrownames(dat.liver.src)<-dat.liver.src[,1]\nrownames(dat.TAM.src)<-dat.TAM.src[,1]\nrownames(dat.TAO.src)<-dat.TAO.src[,1]\nrownames(dat.TASC.src)<-dat.TASC.src[,1]\n\n\ndat.design<-read.csv(paste(input.dir,\"/Design_kavya.csv\",sep=\"\"),header=T,sep=\";\");\n\n\ndat.liver<-dat.liver.src[,-c(1,2)]\ndat.TAM<-dat.TAM.src[,-c(1,2)]\ndat.TAO<-dat.TAO.src[,-c(1,2)]\ndat.TASC<-dat.TASC.src[,-c(1,2)]\n\n\ndat.liver.tmp<-dat.liver[,which(is.even(2:(ncol(dat.liver)-4)))]\ndat.TAM.tmp<-dat.TAM[,which(is.even(2:(ncol(dat.TAM)-4)))]\ndat.TAO.tmp<-dat.TAO[,which(is.even(2:(ncol(dat.TAO)-4)))]\ndat.TASC.tmp<-dat.TASC[,which(is.even(2:(ncol(dat.TASC)-4)))]\n\ndat.liver.p.tmp<-dat.liver[,which(!is.even(2:(ncol(dat.liver)-4)))]\ndat.TAM.p.tmp<-dat.TAM[,which(!is.even(2:(ncol(dat.TAM)-4)))]\ndat.TAO.p.tmp<-dat.TAO[,which(!is.even(2:(ncol(dat.TAO)-4)))]\ndat.TASC.p.tmp<-dat.TASC[,which(!is.even(2:(ncol(dat.TASC)-4)))]\n\ngenes.present.liver = which(rowSums(ifelse(dat.liver.p.tmp<0.05,1,0))==ncol(dat.liver.p.tmp))\ngenes.present.TAM = which(rowSums(ifelse(dat.TAM.p.tmp<0.05,1,0))==ncol(dat.TAM.p.tmp))\ngenes.present.TAO = which(rowSums(ifelse(dat.TAO.p.tmp<0.05,1,0))==ncol(dat.TAO.p.tmp))\ngenes.present.TASC = which(rowSums(ifelse(dat.TASC.p.tmp<0.05,1,0))==ncol(dat.TASC.p.tmp))\n\ndat.liver.filtered<-dat.liver.tmp[genes.present.liver,]\ndat.TAM.filtered<-dat.TAM.tmp[genes.present.TAM,]\ndat.TAO.filtered<-dat.TAO.tmp[genes.present.TAO,]\ndat.TASC.filtered<-dat.TASC.tmp[genes.present.TASC,]\n\n\nlabel.liver<-sapply(1:ncol(dat.liver.tmp), function(x) ifelse(dat.design[dat.design$Id==colnames(dat.liver.tmp)[x],\"groupName\"]==\"NoNASH_ND\",0,1))\nlabel.TAM<-sapply(1:ncol(dat.TAM.tmp), function(x) ifelse(dat.design[dat.design$Id==colnames(dat.TAM.tmp)[x],\"groupName\"]==\"NoNASH_ND\",0,1))\nlabel.TAO<-sapply(1:ncol(dat.TAO.tmp), function(x) ifelse(dat.design[dat.design$Id==colnames(dat.TAO.tmp)[x],\"groupName\"]==\"NoNASH_ND\",0,1))\nlabel.TASC<-sapply(1:ncol(dat.TASC.tmp), function(x) ifelse(dat.design[dat.design$Id==colnames(dat.TASC.tmp)[x],\"groupName\"]==\"NoNASH_ND\",0,1))\n\nlabel.liver.t<-label.liver\nlabel.TAM.t<-label.TAM\nlabel.TAO.t<-label.TAO\nlabel.TASC.t<-label.TASC\n\nlabel.liver.t[label.liver.t==0]<-2\nlabel.TAM.t[label.TAM.t==0]<-2\nlabel.TAO.t[label.TAO.t==0]<-2\nlabel.TASC.t[label.TASC.t==0]<-2\n\np.ks<-sapply(1:100,function(x) ks.test(as.numeric(dat.liver.filtered[x,which(label.liver==1)]),as.numeric(dat.liver.filtered[x,which(label.liver==0)]))$p.value)\np.t<-sapply(1:100,function(x) t.test(as.numeric(dat.liver.filtered[x,which(label.liver==1)]),as.numeric(dat.liver.filtered[x,which(label.liver==0)]))$p.value)\n\n\n#Tuong's Test\n\nmt.mc<-function(data,label,test=\"t\",q=0.05,method =\"BH\"){\n  print(\"Testing...\")\n  print(paste(\"Type of tests:\", test))\n  if(test==\"t\")\n    p = apply(data, 1, function(x) { t.test(x[label==1], x[label==0]) $p.value } )\n  if(test==\"wilcox\")\n    p = apply(data, 1, function(x) { wilcox.test(x[label==1], x[label==0]) $p.value } )\n  \n  print(paste(\"Number of test:\",length(p)))\n  print(paste(\"Method of adjustement:\",method))\n  print(\"Adjusting...\")\n  p.adjust = p.adjust(p, method=method)\n  print(paste(\"Number of significant tests:\",length(which(p.adjust<q))))\n  return(cbind(p,p.adjust))\n}\n\n\n#Multiple Test - EMA\n\nrt.liver<-runTtest(dat.liver.filtered, labels=label.liver, typeFDR=\"FDR-BH\",algo=\"t\", q=0.1, plot=T)\nrt.liver[rt.liver$Significant==\"TRUE\",]\n\nrt<-runTtest(dat.TAM.filtered, labels=label.TAM, typeFDR=\"FDR-BH\",algo=\"t\", q=0.4, plot=T)\nrs.liver[rs.liver$Significant==\"TRUE\",]\n\nrt<-runTtest(dat.TAO.filtered, labels=label.TAO, typeFDR=\"FDR-BH\",algo=\"t\", q=0.4, plot=T)\nrs.liver[rs.liver$Significant==\"TRUE\",]\n\nrt<-runTtest(dat.TASC.filtered, labels=label.TASC, typeFDR=\"FDR-BH\",algo=\"t\", q=0.4, plot=T)\nrs.liver[rs.liver$Significant==\"TRUE\",]\n\n\nsamt<-function(x,y,nperms=100,opt=F, logged2=T){\n  if(logged2)\n    x<-log2(x)\n  data<-list(x=x,y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)\n  samr.obj<-samr(data,  resp.type=\"Two class unpaired\", nperms=nperms)\n  delta.table <- samr.compute.delta.table(samr.obj)\n  delta<-0.45\n  siggenes.table<-samr.compute.siggenes.table(samr.obj,delta, data, delta.table)\n  samr.assess.samplesize.obj<- samr.assess.samplesize(samr.obj, data, log2(2))\n  pv=samr.pvalues.from.perms(samr.obj$tt, samr.obj$ttstar)\n  return(list(probeID=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2],\n                UpLow=c(rep(\"UP\",siggenes.table$ngenes.up),rep(\"LOW\",siggenes.table$ngenes.lo)),\n                Stat=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,4],\n                RawpValue=pv[rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,2]],\n                FoldChange=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,7],\n                FDR=rbind(siggenes.table$genes.up,siggenes.table$genes.lo)[,8],\n                nsiggenes=siggenes.table$ngenes.up+siggenes.table$ngenes.lo))\n}\n\nsamt.opt<-function(x,y,nmax.perms=100, logged2=T){\n  if(logged2)\n    x<-log2(x)\n  data<-list(x=x,y=y, geneid=as.character(1:nrow(x)),genenames=rownames(x), logged2=TRUE)\n  bins<-seq(10,nmax.perms,10)\n  \n  out.log<-do.call(rbind,sapply(bins,function(t){\n    samres<-samt(x, y,t)\n    list(c(nperms=t,nsiggenes=samres$nsiggenes,samres=samres))\n  }\n  ))\n  nperms.opt<-as.numeric(out.log[which(unlist(out.log[,2])==max(unlist(out.log[,2]))),1])\n  \n  samres.opt<-out.log[which(unlist(out.log[,2])==max(unlist(out.log[,2]))),3:ncol(out.log)]\n  print(paste(\"Optimal number of permuations:\",nperms.opt))\n  print(samres.opt)\n  plot(out.log[,1:2])\n  \n  return(samres.opt)\n}\n\n\n\nnperms.samr.opt<-function(dat,labels){\n  out.log<-do.call(rbind,sapply(seq(10,200,10),function(x) list(c(x,samt(dat, labels,x)$nsiggenes))))\n  return(out.log[which(out.log[,2]==max(out.log[,2]))[1],1])\n}\n\n\n#SAM - Tuong \n\nsig.liver<-samt.opt(dat.liver.filtered, label.liver.t,nmax.perms=200)\ndesc.sig.liver<-dat.liver.src[dat.liver.src[,1]%in%sig.liver$samres.probeID,c(\"SYMBOL\",\"DEFINITION\")]\nTissu.liver<-rep(\"liver\",length(sig.liver$samres.probeID))\nupdown.liver<-cbind(rowMeans(dat.liver.filtered[rownames(dat.liver.filtered)%in%sig.liver$samres.probeID,label.liver==1]),rowMeans(dat.liver.filtered[rownames(dat.liver.filtered)%in%sig.liver$samres.probeID,label.liver==0]))\nres.liver<-data.frame(sig.liver$samres.probeID,desc.sig.liver$SYMBOL,Tissu.liver,ifelse(updown.liver[,1]>updown.liver[,2],1,0),sig.liver$samres.UpLow,sig.liver$samres.Stat,sig.liver$samres.RawpValue,sig.liver$samres.FoldChange,sig.liver$samres.FDR,desc.sig.liver$DEFINITION)\ncolnames(res.liver)<-c(\"probeID\",   \"SYMBOL\",  \"Tissu\", \"NASH>NON_NASH\", \"UpLow\", \"Stat\",    \"RawpValue\",   \"FoldChange\", \"FDR(%)\",  \"DEFINITION\")\n\nsig.TAM<-samt.opt(dat.TAM.filtered, label.TAM.t,nmax.perms=200)\ndesc.sig.TAM<-dat.TAM.src[dat.TAM.src[,1]%in%sig.TAM$samres.probeID,c(\"SYMBOL\",\"DEFINITION\")]\nTissu.TAM<-rep(\"TAM\",length(sig.TAM$samres.probeID))\nupdown.TAM<-cbind(rowMeans(dat.TAM.filtered[rownames(dat.TAM.filtered)%in%sig.TAM$samres.probeID,label.TAM==1]),rowMeans(dat.TAM.filtered[rownames(dat.TAM.filtered)%in%sig.TAM$samres.probeID,label.TAM==0]))\nres.TAM<-data.frame(sig.TAM$samres.probeID,desc.sig.TAM$SYMBOL,Tissu.TAM,ifelse(updown.TAM[,1]>updown.TAM[,2],1,0),sig.TAM$samres.UpLow,sig.TAM$samres.Stat,sig.TAM$samres.RawpValue,sig.TAM$samres.FoldChange,sig.TAM$samres.FDR,desc.sig.TAM$DEFINITION)\ncolnames(res.TAM)<-colnames(res.liver)\n\n\nsig.TAO<-samt.opt(dat.TAO.filtered, label.TAO.t,nmax.perms=200)\ndesc.sig.TAO<-dat.TAO.src[dat.TAO.src[,1]%in%sig.TAO$samres.probeID,c(\"SYMBOL\",\"DEFINITION\")]\nTissu.TAO<-rep(\"TAO\",length(sig.TAO$samres.probeID))\nupdown.TAO<-cbind(rowMeans(dat.TAO.filtered[rownames(dat.TAO.filtered)%in%sig.TAO$samres.probeID,label.TAO==1]),rowMeans(dat.TAO.filtered[rownames(dat.TAO.filtered)%in%sig.TAO$samres.probeID,label.TAO==0]))\nres.TAO<-data.frame(sig.TAO$samres.probeID,desc.sig.TAO$SYMBOL,Tissu.TAO,ifelse(updown.TAO[,1]>updown.TAO[,2],1,0),sig.TAO$samres.UpLow,sig.TAO$samres.Stat,sig.TAO$samres.RawpValue,sig.TAO$samres.FoldChange,sig.TAO$samres.FDR,desc.sig.TAO$DEFINITION)\ncolnames(res.TAO)<-colnames(res.liver)\n\nsig.TASC<-samt.opt(dat.TASC.filtered, label.TASC.t,nmax.perms=200)\ndesc.sig.TASC<-dat.TASC.src[dat.TASC.src[,1]%in%sig.TASC$samres.probeID,c(\"SYMBOL\",\"DEFINITION\")]\nTissu.TASC<-rep(\"TASC\",length(sig.TASC$samres.probeID))\nnames(Tissu.TASC)<-\"Tissue\"\nupdown.TASC<-cbind(rowMeans(dat.TASC.filtered[rownames(dat.TASC.filtered)%in%sig.TASC$samres.probeID,label.TASC==1]),rowMeans(dat.TASC.filtered[rownames(dat.TASC.filtered)%in%sig.TASC$samres.probeID,label.TASC==0]))\nres.TASC<-data.frame(sig.TASC$samres.probeID,desc.sig.TASC$SYMBOL,Tissu.TASC,ifelse(updown.TASC[,1]>updown.TASC[,2],1,0),sig.TASC$samres.UpLow,sig.TASC$samres.Stat,sig.TASC$samres.RawpValue,sig.TASC$samres.FoldChange,sig.TASC$samres.FDR,desc.sig.TASC$DEFINITION)\ncolnames(res.TASC)<-colnames(res.liver)\n\n#source(\"http://bioconductor.org/biocLite.R\")\n#biocLite(\"org.Hs.eg.db\")\n#library(\"org.Hs.eg.db\")\n#select(org.Hs.eg.db, keys=res.liver.TAM.TAO.TASC$SYMBOL, cols=c(\"GENENAME\"), keytype=\"ALIAS\")\n\n\nres.liver.TAM.TAO.TASC<-rbind(res.liver,res.TAM,res.TAO,res.TASC)\nwrite.table(res.liver.TAM.TAO.TASC,file=paste(output.dir,\"/significant_genes_liver_TAM_TAO_TASC_logged2_opt.txt\",sep=\"\"),col.names=T,row.names=F,quote=F,sep=\"\\t\")\n\n\n\n\n\n\n\n\n\n#SAM - EMA \n\nrs.liver<-runSAM(log2(dat.liver.filtered), labels=label.liver,q=0.1)\nsig.liver<-rs.liver[rs.liver$Significant==\"TRUE\",]\ndesc.sig.liver<-dat.liver.src[dat.liver.src[,1]%in%sig.liver[,1],c(\"SYMBOL\",\"DEFINITION\")]\nTissu.liver<-rep(\"liver\",nrow(sig.liver))\nupdown.liver<-cbind(rowMeans(dat.liver.filtered[rownames(dat.liver.filtered)%in%sig.liver[,1],label.liver==1]),rowMeans(dat.liver.filtered[rownames(dat.liver.filtered)%in%sig.liver[,1],label.liver==0]))\nres.liver<-data.frame(sig.liver$probeID,desc.sig.liver$SYMBOL,Tissu.liver,ifelse(updown.liver[,1]>updown.liver[,2],1,0),sig.liver$Stat,sig.liver$RawpValue,sig.liver$FoldChange,desc.sig.liver$DEFINITION)\ncolnames(res.liver)<-c(\"probeID\",   \"SYMBOL\",  \"Tissu\", \"NASH>NON_NASH\",  \"Stat\",    \"qValue\",   \"FoldChange\",  \"DEFINITION\")\n\nrs.TAM<-runSAM(log2(dat.TAM.filtered), labels=label.TAM,q=0.1)\nsig.TAM<-rs.TAM[rs.TAM$Significant==\"TRUE\",]\ndesc.sig.TAM<-dat.TAM.src[dat.TAM.src[,1]%in%sig.TAM[,1],c(\"SYMBOL\",\"DEFINITION\")]\nTissu.TAM<-rep(\"TAM\",nrow(sig.TAM))\nupdown.TAM<-cbind(rowMeans(dat.TAM.filtered[rownames(dat.TAM.filtered)%in%sig.TAM[,1],label.TAM==1]),rowMeans(dat.TAM.filtered[rownames(dat.TAM.filtered)%in%sig.TAM[,1],label.TAM==0]))\nres.TAM<-data.frame(sig.TAM$probeID,desc.sig.TAM$SYMBOL,Tissu.TAM,ifelse(updown.TAM[,1]>updown.TAM[,2],1,0),sig.TAM$Stat,sig.TAM$RawpValue,sig.TAM$FoldChange,desc.sig.TAM$DEFINITION)\ncolnames(res.TAM)<-c(\"probeID\",   \"SYMBOL\",  \"Tissu\", \"NASH>NON_NASH\",  \"Stat\",    \"RawpValue\",   \"FoldChange\",  \"DEFINITION\")\n\n\nrs.TAO<-runSAM(log2(dat.TAO.filtered), labels=label.TAO,q=0.1)\nsig.TAO<-rs.TAO[rs.TAO$Significant==\"TRUE\",]\ndesc.sig.TAO<-dat.TAO.src[dat.TAO.src[,1]%in%sig.TAO[,1],c(\"SYMBOL\",\"DEFINITION\")]\nTissu.TAO<-rep(\"TAO\",nrow(sig.TAO))\nupdown.TAO<-cbind(rowMeans(dat.TAO.filtered[rownames(dat.TAO.filtered)%in%sig.TAO[,1],label.TAO==1]),rowMeans(dat.TAO.filtered[rownames(dat.TAO.filtered)%in%sig.TAO[,1],label.TAO==0]))\nres.TAO<-data.frame(sig.TAO$probeID,desc.sig.TAO$SYMBOL,Tissu.TAO,ifelse(updown.TAO[,1]>updown.TAO[,2],1,0),sig.TAO$Stat,sig.TAO$RawpValue,sig.TAO$FoldChange,desc.sig.TAO$DEFINITION)\ncolnames(res.TAO)<-c(\"probeID\",   \"SYMBOL\",  \"Tissu\", \"NASH>NON_NASH\",  \"Stat\",    \"RawpValue\",   \"FoldChange\",  \"DEFINITION\")\n\nrs.TASC<-runSAM(log2(dat.TASC.filtered), labels=label.TASC,q=0.1)\nsig.TASC<-rs.TASC[rs.TASC$Significant==\"TRUE\",]\ndesc.sig.TASC<-dat.TASC.src[dat.TASC.src[,1]%in%sig.TASC[,1],c(\"SYMBOL\",\"DEFINITION\")]\nTissu.TASC<-rep(\"TASC\",nrow(sig.TASC))\nnames(Tissu.TASC)<-\"Tissue\"\nupdown.TASC<-cbind(rowMeans(dat.TASC.filtered[rownames(dat.TASC.filtered)%in%sig.TASC[,1],label.TASC==1]),rowMeans(dat.TASC.filtered[rownames(dat.TASC.filtered)%in%sig.TASC[,1],label.TASC==0]))\nres.TASC<-data.frame(sig.TASC$probeID,desc.sig.TASC$SYMBOL,Tissu.TASC,ifelse(updown.TASC[,1]>updown.TASC[,2],1,0),sig.TASC$Stat,sig.TASC$RawpValue,sig.TASC$FoldChange,desc.sig.TASC$DEFINITION)\ncolnames(res.TASC)<-c(\"probeID\",   \"SYMBOL\",  \"Tissu\", \"NASH>NON_NASH\",  \"Stat\",    \"RawpValue\",   \"FoldChange\",  \"DEFINITION\")\n\n\nres.liver.TAM.TAO.TASC<-rbind(res.liver,res.TAM,res.TAO,res.TASC)\nwrite.table(res.liver.TAM.TAO.TASC,file=paste(output.dir,\"/significant_genes_liver_TAM_TAO_TASC_logged2.txt\",sep=\"\"),col.names=T,row.names=F,quote=F,sep=\"\\t\")\n\n\n\n\ndo.call(rbind,sapply(seq(0, 0.5, by = .1),function(x) {print(paste(\"q=\",x)) \n                                                       res<-runSAM(dat.liver.filtered, labels=label.liver,q=0.1)\n                                                       sig<-res[res$Significant==\"TRUE\",]\n                                                       print(sig)\n                                                       print(nrow(sig))}))\n\n\n#SAMR\nrsam<-sam(dat.TASC.filtered,label.TASC,var.equal = TRUE, rand = 123456)\n\n\n#Tuong\n\np.ajusted.liver.t.BH<-mt.mc(dat.liver.filtered,label.liver,test=\"t\",method=\"BH\")\np.ajusted.liver.t.BH[p.ajusted.liver.t.BH[,2]<0.1,]\n\np.ajusted.TAM.t.BH<-mt.mc(dat.TAM.filtered,label.TAM,test=\"t\",method=\"BH\")\np.ajusted.TAM.t.BH[p.ajusted.TAM.t.BH[,2]<0.1,]\n\np.ajusted.TAO.t.BH<-mt.mc(dat.TAO.filtered,label.TAO,test=\"t\",method=\"BH\")\np.ajusted.TAO.t.BH[p.ajusted.TAO.t.BH[,2]<0.1,]\n\np.ajusted.TASC.t.BH<-mt.mc(dat.TASC.filtered,label.TASC,test=\"t\",method=\"BH\")\np.ajusted.TASC.t.BH[p.ajusted.TASC.t.BH[,2]<0.1,]\n\n\n\np.ajusted.liver.t.holm<-mt.mc(dat.liver.filtered,label.liver,test=\"t\",method=\"holm\")\np.ajusted.liver.t.BH[p.ajusted.liver.t.BH[,2]<0.1,]\np.ajusted.liver.t.hochberg<-mt.mc(dat.liver.filtered,label.liver,test=\"t\",method=\"hochberg\")\np.ajusted.liver.t.BH[p.ajusted.liver.t.BH[,2]<0.1,]\np.ajusted.liver.t.hommel<-mt.mc(dat.liver.filtered,label.liver,test=\"t\",method=\"hommel\")\np.ajusted.liver.t.BH[p.ajusted.liver.t.BH[,2]<0.1,]\np.ajusted.liver.t.BY<-mt.mc(dat.liver.filtered,label.liver,test=\"t\",method=\"BY\")\np.ajusted.liver.t.BH[p.ajusted.liver.t.BH[,2]<0.1,]\n\np.ajusted.TAM.t.BH<-mt.mc(dat.TAM.filtered,label.TAM,test=\"t\",method=\"BH\")\nhead(p.ajusted.TAM.t.BH)\np.ajusted.TAM.t.holm<-mt.mc(dat.TAM.filtered,label.TAM,test=\"t\",method=\"holm\")\nhead(p.ajusted.TAM.t.holm)\np.ajusted.TAM.t.hochberg<-mt.mc(dat.TAM.filtered,label.TAM,test=\"t\",method=\"hochberg\")\nhead(p.ajusted.TAM.t.hochberg)\np.ajusted.TAM.t.hommel<-mt.mc(dat.TAM.filtered,label.TAM,test=\"t\",method=\"hommel\")\nhead(p.ajusted.TAM.t.hommel)\np.ajusted.TAM.t.BY<-mt.mc(dat.TAM.filtered,label.TAM,test=\"t\",method=\"BY\")\nhead(p.ajusted.TAM.t.BY)\n\np.ajusted.TAO.t.BH<-mt.mc(dat.TAO.filtered,label.TAO,test=\"t\",method=\"BH\")\nhead(p.ajusted.TAO.t.BH)\np.ajusted.TAO.t.holm<-mt.mc(dat.TAO.filtered,label.TAO,test=\"t\",method=\"holm\")\nhead(p.ajusted.TAO.t.holm)\np.ajusted.TAO.t.hochberg<-mt.mc(dat.TAO.filtered,label.TAO,test=\"t\",method=\"hochberg\")\nhead(p.ajusted.TAO.t.hochberg)\np.ajusted.TAO.t.hommel<-mt.mc(dat.TAO.filtered,label.TAO,test=\"t\",method=\"hommel\")\nhead(p.ajusted.TAO.t.hommel)\np.ajusted.TAO.t.BY<-mt.mc(dat.TAO.filtered,label.TAO,test=\"t\",method=\"BY\")\nhead(p.ajusted.TAO.t.BY)\n\np.ajusted.TASC.t.BH<-mt.mc(dat.TASC.filtered,label.TASC,test=\"t\",method=\"BH\")\nhead(p.ajusted.TASC.t.BH)\np.ajusted.TASC.t.holm<-mt.mc(dat.TASC.filtered,label.TASC,test=\"t\",method=\"holm\")\nhead(p.ajusted.TASC.t.holm)\np.ajusted.TASC.t.hochberg<-mt.mc(dat.TASC.filtered,label.TASC,test=\"t\",method=\"hochberg\")\nhead(p.ajusted.TASC.t.hochberg)\np.ajusted.TASC.t.hommel<-mt.mc(dat.TASC.filtered,label.TASC,test=\"t\",method=\"hommel\")\nhead(p.ajusted.TASC.t.hommel)\np.ajusted.TASC.t.BY<-mt.mc(dat.TASC.filtered,label.TASC,test=\"t\",method=\"BY\")\nhead(p.ajusted.TASC.t.BY)\n\n\nhead(p.ajusted.liver.t.BH[order(p.ajusted.liver.t.BH[,2]),])\n\nhead(p.ajusted.TAM.t.BH[order(p.ajusted.TAM.t.BH[,2]),])\n\nhead(p.ajusted.TAO.t.BH[order(p.ajusted.TAO.t.BH[,2]),])\n\nhead(p.ajusted.TASC.t.BH[order(p.ajusted.TASC.t.BH[,2]),])\n\n\n\nrt.liver<-runTtest(dat.liver.tmp, labels=label.liver, typeFDR=\"FDR-BH\",algo=\"t\", q=0.05, plot=TRUE)\nrt.TAM<-runTtest(dat.TAM.tmp[1:100,], labels=label.TAM, typeFDR=\"FDR-BH\",algo=\"t\", q=0.05, plot=TRUE)\nrt.TAO<-runTtest(dat.TAO.tmp[1:100,], labels=label.TAO, typeFDR=\"FDR-BH\",algo=\"t\", q=0.05, plot=TRUE)\nrt.TASC<-runTtest(dat.TASC.tmp[1:100,], labels=label.TASC, typeFDR=\"FDR-BH\",algo=\"t\", q=0.05, plot=TRUE)\n\n\nge.data.t0<-get(load(file=\"C:/Users/TUONG/Documents/metacardis/1.data/metacardis/GE_t0.RData\"))\nn.na<-sapply(1:ncol(ge.data.t0),function(x) sum(is.na(ge.data.t0[,x]))) \nge.data.t0.nona<-ge.data.t0[,which(n.na==0)]\ndat.ge<-t(ge.data.t0.nona)\n\n\noutput.dir2<-\"C:/Users/TUONG/Documents/metacardis/3.results/CLASSIFICATION/Subjects/2013-06-17\"\n\nge.lm.classified.adfm.t0<-read.csv(sprintf(\"%s/ge-nona_lm_t0_Adipocyte-diameter_vs_Fat-mass_points.csv\",output.dir2))\nge.lm.classified.adwh2.t0<-read.csv(sprintf(\"%s/ge-nona_lm_t0_Adipocyte-diameter_vs_Waist_Height2_points.csv\",output.dir2))\nge.lm.classified.adfmh2.t0<-read.csv(sprintf(\"%s/ge-nona_lm_t0_Adipocyte-diameter_vs_Fat-mass_Height2_points.csv\",output.dir2))\nge.lm.classified.wfmh2.t0<-read.csv(sprintf(\"%s/ge-nona_lw_t0_Waist_vs_Fat-mass_Height2_points.csv\",output.dir2))\nge.lm.classified.adh2.t0<-read.csv(sprintf(\"%s/ge-nona_lm_t0_Adipocyte-diameter_vs_Height2_points.csv\",output.dir2))\nge.lm.classified.adbmifma.t0<-read.csv(sprintf(\"%s/ge-nona_lm_t0_Adipocyte-diameter_vs_BMI-Fat-mass-Age_points.csv\",output.dir2))\n\n\n\nload(file=\"C:/Users/TUONG/Documents/metacardis/1.data/metacardis/DonneeSequences_t0_global_counting_table.csv.gz.opt.RData\")\n\ndat.ge.bact<-data.matrix(seqcount.data.opt[,c(\"cog\",\"count\",\"count_treshold\")])\ntmp<-gsub(\"_\",\"-\",substr(toupper(colnames(dat.ge.bact)),regexpr(\"_\",\"S10_LAJ_AN_T0\")[1]+1,nchar(toupper(colnames(dat.ge.bact)))-3))\ncolnames(dat.ge.bact)<-tmp\n\nrt<-runTtest(dat.ge, labels=ge.lm.classified.adfm.t0[,4], typeFDR=\"FDR-BH\",algo=\"t\", q=0.05, plot=FALSE)\nmin(rt[,4])\n\nrt<-runTtest(dat.ge, labels=ge.lm.classified.adwh2.t0[,4], typeFDR=\"FDR-BH\",algo=\"t\",q=0.05, plot=FALSE)\nmin(rt[,4])\n\nrt<-runTtest(dat.ge, labels=ge.lm.classified.adfmh2.t0[,4], typeFDR=\"FDR-BH\",algo=\"t\", q=0.05, plot=FALSE)\nmin(rt[,4])\n\nrt<-runTtest(dat.ge, labels=ge.lm.classified.adh2.t0[,4],typeFDR=\"FDR-BH\",algo=\"t\", q=0.05, plot=FALSE)\nmin(rt[,4])\n\nrt<-runTtest(dat.ge, labels=ge.lm.classified.adbmifma.t0[,4], typeFDR=\"FDR-BH\",algo=\"t\", q=0.05, plot=FALSE)\nmin(rt[,4])\n\n\nteststat <-mt.teststat(dat.ge,classlabel=ge.lm.classified.adfmh2.t0[,4],test=\"t\")\nqqnorm(teststat)\nqqline(teststat)\n\nteststat <-mt.teststat(dat.ge,classlabel=ge.lm.classified.adh2.t0[,4],test=\"t\")\nqqnorm(teststat)\nqqline(teststat)\n\nteststat <-mt.teststat(dat.ge,classlabel=ge.lm.classified.adbmifma.t0[,4],test=\"t\")\nqqline(teststat)\n\n\n\n###\n\nrs.adfm<-runSAM(dat.ge, labels=ge.lm.classified.adfm.t0[,4],q=0.1)\nmin(rs.adfm[,4])\n\nrs<-runSAM(dat.ge, labels=ge.lm.classified.adwh2.t0[,4],q=0.1)\nmin(rs[,4])\n\nrs<-runSAM(dat.ge, labels=ge.lm.classified.wfmh2.t0[,4],q=0.1)\nmin(rs[,4])\n\nrs<-runSAM(dat.ge, labels=ge.lm.classified.adh2.t0[,4],q=0.1)\nmin(rs[,4])\n\nrs<-runSAM(dat.ge, labels=ge.lm.classified.adbmifma.t0[,4],q=0.1)\nmin(rs[,4])\n\n\n\n\n\n",
    "created" : 1374596235857.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4092776426",
    "id" : "9EC3E850",
    "lastKnownWriteTime" : 1374676376,
    "path" : "~/kavya/deg/2.scripts/DEG.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}